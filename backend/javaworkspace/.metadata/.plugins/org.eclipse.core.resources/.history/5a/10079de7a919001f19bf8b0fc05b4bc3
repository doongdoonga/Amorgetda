package org.Amorgetda.day06.array.sort;

import java.util.Random;
import java.util.Scanner;

public class Test {

	public static void main(String[] args) {
		//						정상 실행 결과
		//			----------컴퓨터에게 지는 경우----------
		//			가위, 바위, 보 게임을 시작합니다.
		//			가위, 바위, 보 중 한 개를 입력하세요 : 가위
		//			당신은 가위를 냈습니다.
		//			컴퓨터는 바위를 냈습니다.
		//			당신이 졌습니다.
		
		
		
		 Scanner scanner = new Scanner(System.in);
	        Random random = new Random();

	        int totalVictories = 0; // 총 이긴 전투 횟수를 저장하는 변수
	        int totalGold = 0; // 총 획득한 골드를 저장하는 변수
	        int totalDamageTaken = 0; // 총 공격 받은 횟수를 저장하는 변수

	        while (totalVictories < 3) {
	            System.out.println("======== 전투 " + (totalVictories + 1) + " ========");

	            // 사용자에게 선택지 제시
	            System.out.println("당신의 무기를 선택하세요:");
	            System.out.println("1. 칼");
	            System.out.println("2. 지팡이");

	            // 사용자의 선택 받기
	            System.out.print("선택: ");
	            int userChoice = scanner.nextInt();

	            // 사용자의 선택에 따른 무기 설정
	            String userWeapon = "";
	            switch (userChoice) {
	                case 1:
	                    userWeapon = "칼";
	                    break;
	                case 2:
	                    userWeapon = "지팡이";
	                    break;
	                default:
	                    System.out.println("잘못된 선택입니다. 1 또는 2를 선택해주세요.");
	                    return;
	            }

	            // 무작위로 적 선택 (고블린 또는 정령)
	            String enemy = (random.nextBoolean()) ? "고블린" : "정령";

	            // 사용자의 선택과 적 출력
	            System.out.println("당신은 " + userWeapon + "을(를) 선택했습니다.");
	            System.out.println(enemy + "이(가) 나타났습니다!");

	            // 전투 시작
	            System.out.println("전투 시작!");

	            // 전투 동작 반복
	            int attackCount = 0; // 사용자의 공격 횟수를 저장하기 위한 변수
	            int damageTaken = 0; // 사용자가 받은 공격 횟수를 저장하기 위한 변수
	            boolean isDefeated = false; // 몬스터를 쓰러뜨렸는지 여부를 저장하는 변수
	            while (attackCount < 3 && !isDefeated) {
	                // 사용자의 선택 받기
	                System.out.println("전투 동작을 선택하세요:");
	                System.out.println("1. 공격");
	                System.out.println("2. 막기");
	                System.out.print("선택: ");
	                int userAction = scanner.nextInt();

	                // 사용자의 선택에 따른 전투 동작 수행
	                if (userAction == 1) {
	                    // 공격을 선택한 경우
	                    if (userWeapon.equals("칼")) {
	                        if (enemy.equals("고블린")) {
	                            System.out.println("칼로 고블린을 공격했습니다!");
	                            attackCount++;
	                            if (attackCount == 3) {
	                                System.out.println("고블린이 쓰러졌습니다!");
	                                System.out.println("10G를 획득했습니다!");
	                                isDefeated = true;
	                            }
	                        } else if (enemy.equals("정령")) {
	                            System.out.println("정령은 공격을 맞출 수 없습니다!");
	                        }
	                    } else if (userWeapon.equals("지팡이")) {
	                        if (enemy.equals("고블린")) {
	                            System.out.println("고블린에게 공격을 맞출 수 없습니다!");
	                        } else if (enemy.equals("정령")) {
	                            System.out.println("지팡이로 정령을 공격했습니다!");
	                            attackCount++;
	                            if (attackCount == 3) {
	                                System.out.println("정령이 쓰러졌습니다!");
	                                System.out.println("10G를 획득했습니다!");
	                                isDefeated = true;
	                            }
	                        }
	                    }
	                } else if (userAction == 2) {
	                    // 막기를 선택한 경우
	                    if (userWeapon.equals("칼")) {
	                        if (enemy.equals("고블린")) {
	                            System.out.println("고블린의 공격을 막았습니다!");
	                        } else if (enemy.equals("정령")) {
	                            System.out.println("정령의 공격을 막을 수 없습니다!");
	                        }
	                    } else if (userWeapon.equals("지팡이")) {
	                        if (enemy.equals("고블린")) {
	                            System.out.println("고블린의 공격을 막을 수 없습니다!");
	                        } else if (enemy.equals("정령")) {
	                            System.out.println("정령의 공격을 막았습니다!");
	                        }
	                    }
	                } else {
	                    System.out.println("잘못된 선택입니다. 1 또는 2를 선택해주세요.");
	                }

	                // 공격을 받은 경우
	                if (!isDefeated && random.nextBoolean()) {
	                    damageTaken++;
	                    System.out.println("몬스터의 공격을 받았습니다!");
	                }
	            }
	         // 전투 종료 후 결과 출력
	            if (isDefeated) {
	                // 몬스터를 쓰러뜨린 경우
	                totalVictories++; } else {
	                    // 사용자가 3번 공격을 받은 경우
	                    System.out.println("당신은 3번의 공격을 받아 마을로 돌아갑니다.");
	                    // 누적된 공격 받은 횟수 업데이트
	                    totalDamageTaken += damageTaken;
	                    // 마을 도착 메시지 출력
	                    System.out.println("다음 마을에 도착했습니다.");
	                    // 누적된 골드 출력
	                    System.out.println("누적된 골드: " + totalGold + "G");

	                    // 무기 강화 또는 회복 선택지 제공
	                    System.out.println("1. 무기 강화 (20G)");
	                    System.out.println("2. 회복 (15G)");
	                    System.out.print("선택: ");
	                    int townOption = scanner.nextInt();

	                    // 선택에 따른 처리
	                    switch (townOption) {
	                        case 1:
	                            if (totalGold >= 20) {
	                                System.out.println("무기를 강화합니다.");
	                                // 무기 강화 처리
	                                totalGold -= 20;
	                                attackCount--; // 몬스터를 쓰러트리는데 필요한 공격 횟수를 1회 감소
	                                if (attackCount < 0) attackCount = 0; // 최소값이 0이 되도록 보정
	                                System.out.println("무기가 강화되었습니다. 현재 골드: " + totalGold + "G");
	                            } else {
	                                System.out.println("골드가 부족하여 무기를 강화할 수 없습니다.");
	                            }
	                            break;
	                        case 2:
	                            if (totalGold >= 15) {
	                                System.out.println("체력을 회복합니다.");
	                                // 체력 회복 처리
	                                totalGold -= 15;
	                                damageTaken = 0; // 공격 받은 횟수 초기화
	                                System.out.println("체력이 회복되었습니다. 현재 골드: " + totalGold + "G");
	                            } else {
	                                System.out.println("골드가 부족하여 회복을 할 수 없습니다.");
	                            }
	                            break;
	                        default:
	                            System.out.println("잘못된 선택입니다. 다음 전투로 이동합니다.");
	                            break;
	                    }
	                }
	            }

	            // 3번의 전투를 마치고 다음 마을로 이동하는 메시지 출력
	            System.out.println("3번의 전투를 마치고 다음 마을에 도착했습니다.");
	            // 누적된 골드 출력
	            System.out.println("누적된 골드: " + totalGold + "G");

	            scanner.close();
	        }
	    }

